e[k][[1]] <- as.item(temp, labels = structure(c(-2:2),
names = c("Pas du tout","Pas vraiment","Indifférent/NSP","Plutôt","Tout à fait")),
# names = c("Non, pas du tout","Non, pas vraiment","Indifférent ou Ne sais pas","Oui, plutôt","Oui, tout à fait")),
annotation=Label(e[k][[1]]))
}
for (k in c(127:130)) {
temp1 <- -3*(e[k][[1]]=='Non, je suis sûr·e que non') - (e[k][[1]]=='Non, ça ne me dit rien') + (e[k][[1]]=='Oui, il me semble') + 3*(e[k][[1]]=="Oui, j'en suis sûr·e")
temp2 <- -3*(e[k+28][[1]]=='Non, je suis sûr·e que non') - (e[k+28][[1]]=='Non, ça ne me dit rien') + (e[k+28][[1]]=='Oui, il me semble') + 3*(e[k+28][[1]]=="Oui, j'en suis sûr·e")
temp[e$info_CCC==1] <- -3*(e[k][[1]][e$info_CCC==1]=='Non, je suis sûr·e que non') - (e[k][[1]][e$info_CCC==1]=='Non, ça ne me dit rien') + (e[k][[1]][e$info_CCC==1]=='Oui, il me semble') + 3*(e[k][[1]][e$info_CCC==1]=="Oui, j'en suis sûr·e")
temp[e$info_CCC==0] <- -3*(e[k+28][[1]][e$info_CCC==0]=='Non, je suis sûr·e que non') - (e[k+28][[1]][e$info_CCC==0]=='Non, ça ne me dit rien') + (e[k+28][[1]][e$info_CCC==0]=='Oui, il me semble') + 3*(e[k+28][[1]][e$info_CCC==0]=="Oui, j'en suis sûr·e")
e[k][[1]] <- as.item(temp1, labels=structure(c(-3, -1, 1, 3), names = c('Non, sûr', 'Non, me dit rien', 'Oui, me semble', 'Oui, sûr')), annotation=Label(e[k][[1]]))
e[k+28][[1]] <- as.item(temp2, labels=structure(c(-3, -1, 1, 3), names = c('Non, sûr', 'Non, me dit rien', 'Oui, me semble', 'Oui, sûr')), annotation=Label(e[k+28][[1]]))
e[[sub('_info_CCC', '', names(e)[k])]] <- as.item(temp, labels=structure(c(-3, -1, 1, 3), names = c('Non, sûr', 'Non, me dit rien', 'Oui, me semble', 'Oui, sûr')),
annotation=sub('\\(info_CCC==1\\)', '~ info_CCC', sub('_info_CCC', '', Label(e[k][[1]]))))
}
for (k in c(149:154)) {
temp <-  0.1 * (e[k][[1]]=="NSP") + (e[k][[1]]=="Oui") - (e[k][[1]]=="Non")
e[k][[1]] <- as.item(temp, labels = structure(c(0.1,-1:1), names = c("NSP","Non","Blanc","Oui")), missing.values=0.1, annotation=Label(e[k][[1]]))
}
temp[1:length(e$info_CCC)] <- 'Non'
temp[grepl('Oui', e$concentration_info_CCC) | grepl('Oui', e$concentration_no_info_CCC)] <- 'Oui'
e$concentration <- as.item(temp, labels=structure(c('Non', 'Oui'), names = c('Non', 'Oui')), annotation=sub('\\(info_CCC==1\\)', '(info_CCC)', sub('_info_CCC', '', Label(e$concentration_info_CCC))))
# temp[grepl('Ça dépend',e$trop_impots)] <- 'Ça dépend'
# temp[!grepl('Ça dépend',e$trop_impots)] <- e$trop_impots[!grepl('Ça dépend',e$trop_impots)]
# e$trop_impots <- as.item(as.character(temp), labels = structure(c("NSP", "Non","Ça dépend","Oui"), names = c("NSP","Non","Ça dépend","Oui")), missing.values = c("NSP"), annotation=attr(e$trop_impots, "label"))
temp <- -1*grepl('Oui', e$trop_impots) + 1*grepl('Non', e$trop_impots) -0.1*grepl('NSP', e$trop_impots)
e$trop_impots <- as.item(temp, labels = structure(c(-0.1, 1:-1), names = c("NSP","Non","Ça dépend","Oui")), missing.values = -0.1, annotation=attr(e$trop_impots, "label"))
temp <- (e$parle_CC=='Plusieurs fois par an') + 2*(e$parle_CC=='Plusieurs fois par mois') - (e$parle_CC=="NSP")
e$parle_CC <- as.item(temp, labels = structure(c(-1:2),
names = c("NSP","Presque jamais","Plusieurs fois par an","Plusieurs fois par mois")),
missing.values = -1, annotation=Label(e$parle_CC))
temp <- grepl("Faibles", e$effets_CC_AT) + 2*grepl("Graves", e$effets_CC_AT) + 3*grepl("Désastreux", e$effets_CC_AT) + 4*grepl("Cataclysmiques", e$effets_CC_AT) - (e$effets_CC_AT=="NSP")
e$effets_CC_AT <- as.item(temp, labels = structure(c(-1:4),
names = c("NSP","Insignifiants","Faibles","Graves","Désastreux","Cataclysmiques")),
# names = c("NSP","Insignifiants, voire bénéfiques","Faibles, car les humains sauraient vivre avec","Graves, car il y aurait plus de catastrophes naturelles","Désastreux, les modes de vie seraient largement altérés","Cataclysmiques, l'humanité disparaîtrait")),
missing.values = -1, annotation=Label(e$effets_CC_AT))
# e$cause_CC_CCC <- relabel(e$cause_CC_CCC, "Uniquement à des processus naturels"="Uniquement naturel", "Principalement à des processus naturels"="Principalement naturel", "Autant à des processus naturels qu'à l'activité humaine"="Autant",  "Principalement à l'activité humaine"="Principalement anthropique", "Uniquement à l'activité humaine"="Uniquement anthropique")
temp <- 1*grepl("uement à l'activité hu", e$cause_CC_CCC) - grepl("Autant", e$cause_CC_CCC) - 2*grepl("incipalement à des processus na", e$cause_CC_CCC) - 3*grepl("iquement à des processus nat", e$cause_CC_CCC) - 4*grepl("ne pense pas", e$cause_CC_CCC)
temp[is.na(e$cause_CC_CCC)] <- NA
e$cause_CC_CCC <- as.item(temp, labels = structure(c(-4:1),
names = c("N'existe pas","Uniquement naturel","Principalement naturel","Autant","Principalement anthropique","Uniquement anthropique")), annotation=Label(e$cause_CC_CCC))
temp <- -1*grepl("positif", e$effets_CC_CCC) + grepl("pénible", e$effets_CC_CCC)
temp[is.na(e$effets_CC_CCC)] <- NA
e$effets_CC_CCC <- as.item(temp, labels = structure(-1:1, names = c("Effets positifs", "Adaptation sans problème", "Extrêmement pénible")), annotation = Label(e$effets_CC_CCC))
temp <- -3*(e$problemes_invisibilises=='Jamais') - (e$problemes_invisibilises=='Peu souvent') + (e$problemes_invisibilises=='Assez souvent') + 3*(e$problemes_invisibilises=='Très souvent')
e$problemes_invisibilises <- as.item(temp, labels=structure(c(-3, -1, 1, 3), names = c('Jamais', 'Peu souvent', 'Assez souvent', 'Très souvent')), annotation=Label(e$problemes_invisibilises))
temp <- -3*(e$issue_CC=='Non, certainement pas') - (e$issue_CC=='Non, probablement pas') + (e$issue_CC=='Oui, probablement') + 3*(e$issue_CC=='Oui, certainement')
e$issue_CC <- as.item(temp, labels=structure(c(-3, -1, 1, 3), names = c('Non, certainement pas', 'Non, probablement pas', 'Oui, probablement', 'Oui, certainement')), annotation=Label(e$issue_CC))
temp <- -3*(e$confiance_sortition=='Pas du tout confiance') - (e$confiance_sortition=='Plutôt pas confiance') + (e$confiance_sortition=='Plutôt confiance') + 3*(e$confiance_sortition=='Tout à fait confiance')
e$confiance_sortition <- as.item(temp, labels=structure(c(-3, -1, 1, 3), names = c('Pas du tout confiance', 'Plutôt pas confiance', 'Plutôt confiance', 'Tout à fait confiance')), annotation=Label(e$confiance_sortition))
temp <- -2*(e$certitude_gagnant=='Je ne suis pas du tout sûr·e de ma réponse') - (e$certitude_gagnant=='Je ne suis pas vraiment sûr·e de ma réponse') + (e$certitude_gagnant=='Je suis sûr·e de ma réponse')
e$certitude_gagnant <- as.item(temp, labels=structure(c(-2:1), names = c('Pas du tout sûr', 'Pas vraiment sûr', 'Moyennement sûr', 'Sûr')), annotation=Label(e$certitude_gagnant))
temp <- -2*(e$certitude_gagnant_feedback=='Je ne suis pas du tout sûr·e de ma réponse') - (e$certitude_gagnant_feedback=='Je ne suis pas vraiment sûr·e de ma réponse') + (e$certitude_gagnant_feedback=='Je suis sûr·e de ma réponse')
e$certitude_gagnant_feedback <- as.item(temp, labels=structure(c(-2:1), names = c('Pas du tout sûr', 'Pas vraiment sûr', 'Moyennement sûr', 'Sûr')), annotation=Label(e$certitude_gagnant_feedback))
temp <- -2*grepl("Jamais", e$confiance_gouvernement) - grepl("Parfois", e$confiance_gouvernement) + grepl("La plupart", e$confiance_gouvernement) + 2*grepl("Toujours", e$confiance_gouvernement) + 0.1*grepl("NSP", e$confiance_gouvernement)
e$confiance_gouvernement <- as.item(temp, labels=structure(c(-2:2,0.1), names = c('Jamais', 'Parfois', 'Moitié du temps', 'Plupart du temps', 'Toujours', 'NSP')), missing.values=0.1, annotation=Label(e$confiance_gouvernement))
temp <- 1*(e$confiance_dividende=='Oui') - 1*(e$confiance_dividende=='Non')
e$confiance_dividende <- as.item(temp, labels=structure(c(-1:1), names=c('Non', 'À moitié', 'Oui')), annotation=Label(e$confiance_dividende))
temp <- - grepl("Non", e$connait_CCC) + grepl("Oui, je sais assez", e$connait_CCC) + 2*grepl("Oui, je sais très bien", e$connait_CCC)
e$connait_CCC <- as.item(temp, labels=structure(c(-1:2), names = c('Non', 'Vaguement', 'Oui, assez', 'Oui, très')), annotation=Label(e$connait_CCC))
temp <- - grepl("Aucune", e$sait_CCC_devoilee) + grepl("Oui", e$sait_CCC_devoilee)
is.na(temp) <- is.na(e$sait_CCC_devoilee)
e$sait_CCC_devoilee <- as.item(temp, labels=structure(c(-1:1), names = c('Non', 'Pas sûr', 'Oui')), annotation=Label(e$sait_CCC_devoilee))
temp <- -1*grepl('Non', e$France_CC) + grepl('Oui', e$France_CC)
e$France_CC <- as.item(temp, labels = structure(-1:1, names = c('Non', ' NSP ', 'Oui')), annotation=Label(e$France_CC)) # missing.values = 0,
e$question_confiance <- e$question_confiance > 0
e$avant_modifs <- e$avant_modifs != 2
e$duree_info_CCC[e$avant_modifs==T] <- NA # /!\ comment these two lines to see the duration avant_modifs, when info CCC & concentration were on the same page
e$variante_efforts_vous[e$avant_modifs==T] <- 0
temp <- e$efforts_relatifs
e$efforts_relatifs[temp=='Un peu moins' & e$variante_efforts_vous==0] <- 'Un peu plus'
e$efforts_relatifs[temp=='Un peu plus' & e$variante_efforts_vous==0] <- 'Un peu moins'
e$efforts_relatifs[temp=='Beaucoup moins' & e$variante_efforts_vous==0] <- 'Beaucoup plus'
e$efforts_relatifs[temp=='Beaucoup plus' & e$variante_efforts_vous==0] <- 'Beaucoup moins'
temp <- -2*(e$efforts_relatifs=='Beaucoup moins') - (e$efforts_relatifs=='Un peu moins') + 2*(e$efforts_relatifs=='Beaucoup plus') + 1*(e$efforts_relatifs=='Un peu plus')
e$efforts_relatifs <- as.item(temp, labels=structure(c(-2:2), names = c('Beaucoup moins', 'Un peu moins', 'Autant', 'Un peu plus', 'Beaucoup plus')), annotation=Label(e$efforts_relatifs))
temp <- 20.90*(e$age == "18 à 24 ans") + 29.61*(e$age == "25 à 34 ans") + 42.14*(e$age == "35 à 49 ans") + 56.84*(e$age == "50 à 64 ans") + 75.43*(e$age == "65 ans ou plus")
e$age <- as.item(temp, labels = structure(c(20.90, 29.61, 42.14, 56.84, 75.43), names = c("18-24", "25-34", "35-49", "50-64", "65+")), annotation=Label(e$age))
# e$Age <- (e$age == "18 à 24 ans") + 2*(e$age == "25 à 34 ans") + 3.3*(e$age == "35 à 49 ans") + 4.6*(e$age == "50 à 64 ans") + 7*(e$age == "65 ans ou plus")
e$taille_agglo <- as.numeric(sub('CC ', '', e$taille_agglo))
e$taille_agglo <- as.item(as.numeric(e$taille_agglo), labels = structure(1:5, names = c("rural", "-20k", "20-100k", "+100k", "Paris")), annotation=Label(e$taille_agglo))
temp <- 1*grepl('10 001', e$patrimoine) + 2*grepl('60 001', e$patrimoine) + 3*grepl('180 001', e$patrimoine) + 4*grepl('350 001', e$patrimoine) + 5*grepl('Plus de', e$patrimoine) - 1*grepl('NSP', e$patrimoine)
e$patrimoine <- as.item(as.numeric(temp), missing.values=-1, labels = structure(-1:5, names = c("NSP", "< 10k", "10-60k", "60-180k", "180-350k", "350-550k", "> 550k")), annotation=Label(e$patrimoine))
e$Diplome <- (e$diplome == "Brevet des collèges") + 2*(e$diplome=="CAP ou BEP") + 3*(e$diplome=="Baccalauréat") + 4*(e$diplome=="Bac +2 (BTS, DUT, DEUG, écoles de formation sanitaires et sociales...)") + 5*(e$diplome=="Bac +3 (licence...)") + 6*(e$diplome=="Bac +5 ou plus (master, école d'ingénieur ou de commerce, doctorat, médecine, maîtrise, DEA, DESS...)") - (e$diplome=="NSP (Ne se prononce pas)")
e$diplome4 <- as.item(pmin(pmax(e$Diplome, 1), 4), labels = structure(1:4, names = c("Aucun diplôme ou brevet", "CAP ou BEP", "Baccalauréat", "Supérieur")), annotation=Label(e$diplome))
e$chauffage <- relabel(e$chauffage, "Gaz de ville"="Gaz réseau", "Butane, propane, gaz en citerne"="Gaz bouteille", "Fioul, mazout, pétrole"="Fioul", "Électricité"="Électricité", "Bois, solaire, géothermie, aérothermie (pompe à chaleur)"="Bois, solaire...", "Autre"="Autre", "NSP"="NSP")
e$cause_CC_AT <- relabel(e$cause_CC_AT, "n'est pas une réalité"="n'existe pas", "est principalement dû à la variabilité naturelle du climat"="naturel", "est principalement dû à l'activité humaine"="anthropique", "NSP"="NSP")
# e$confiance_gens <- relabel(as.factor(e$confiance_gens), "On peut faire confiance à la plupart des gens"="Confiant", "On n’est jamais assez prudent quand on a affaire aux autres"="Méfiant")
# label(e$confiance_gens) <- "confiance_gens: D’une manière générale, diriez-vous que… ? (On peut faire confiance à la plupart des gens/On n’est jamais assez prudent quand on a affaire aux autres) - Q65"
e$confiance_gens <- as.item(as.character(e$confiance_gens), labels = structure(c("On peut faire confiance à la plupart des gens", "On n’est jamais assez prudent quand on a affaire aux autres"), names = c("Confiance", "Méfiance")), annotation=Label(e$confiance_gens))
e$gauche_droite <- pmax(-2,pmin(2,-2 * e$extr_gauche - 1*e$gauche + 1*e$droite + 2 * e$extr_droite))
is.na(e$gauche_droite) <- (e$gauche_droite == 0) & !e$centre
e$Gauche_droite <- as.factor(e$gauche_droite)
e$gauche_droite <- as.item(as.numeric(as.vector(e$gauche_droite)), labels = structure(c(-2:2),
names = c("Extrême gauche","Gauche","Centre","Droite","Extrême droite")), annotation="gauche_droite:échelle de -2 (extr_gauche) à +2 (extr_droite) - Orientation politique (Comment vous définiriez-vous ? Plusieurs réponses possibles: (D'extrême) gauche/Du centre/(D'extrême) droite/Libéral/Humaniste/Patriote/Apolitique/Écologiste/Conservateur (champ libre)/NSP)")
levels(e$Gauche_droite) <- c("Extreme-left", "Left", "Center", "Right", "Extreme-right", "Indeterminate")
e$Gauche_droite[is.na(e$Gauche_droite)] <- "Indeterminate"
e$indeterminate <- e$Gauche_droite == "Indeterminate"
e$gauche_droite_nsp <- as.character(e$gauche_droite)
e$gauche_droite_nsp[e$Gauche_droite=='Indeterminate'] <- 'NSP'
# e$gauche_droite_nsp <- as.factor(e$gauche_droite_nsp)
temp <- Label(e$interet_politique)
e$interet_politique <- 1*(e$interet_politique=='Un peu') + 2*(e$interet_politique=='Beaucoup')
e$interet_politique <- as.item(e$interet_politique, labels=structure(c(0:2), names=c('Presque pas', 'Un peu', 'Beaucoup')), annotation=temp)
e$gilets_jaunes[e$gilets_jaunes_NSP==T] <- -0.1
e$gilets_jaunes[e$gilets_jaunes_compris==T] <- 0 # total à 115%
e$gilets_jaunes[e$gilets_jaunes_oppose==T] <- -1 # 2 oppose et soutien en même temps
e$gilets_jaunes[e$gilets_jaunes_soutien==T] <- 1
e$gilets_jaunes[e$gilets_jaunes_dedans==T] <- 2
e$gilets_jaunes <- as.item(e$gilets_jaunes, missing.values=-0.1, labels = structure(c(-0.1,-1:2), names=c('NSP', "s'oppose", 'comprend', 'soutient', 'en est')),
annotation="gilets_jaunes: Que pensez-vous des gilets jaunes ? -1: s'oppose / 0: comprend sans soutenir ni s'opposer / 1: soutient / 2: fait partie des gilets jaunes (gilets_jaunes_compris/oppose/soutien/dedans/NSP)" )
e$Gilets_jaunes <- as.factor(as.character(e$gilets_jaunes))
e$Gilets_jaunes <- relevel(e$Gilets_jaunes, 'soutient')
e$Gilets_jaunes <- relevel(e$Gilets_jaunes, 'comprend')
e$Gilets_jaunes <- relevel(e$Gilets_jaunes, 'NSP')
e$Gilets_jaunes <- relevel(e$Gilets_jaunes, "s'oppose")
label(e$Gilets_jaunes) <- "Gilets_jaunes: Que pensez-vous des gilets jaunes ? -1: s'oppose / 0: comprend sans soutenir ni s'opposer / 1: soutient / 2: fait partie des gilets jaunes (gilets_jaunes_compris/oppose/soutien/dedans/NSP)"
e$echelle_politique_CC <- -2*(e$echelle_politique_CC=='à toutes les échelles') -1*(e$echelle_politique_CC=='mondiales') + (e$echelle_politique_CC=='nationales') + 2*(e$echelle_politique_CC=='locales')
e$echelle_politique_CC <- as.item(e$echelle_politique_CC, labels = structure(c(-2:2), names=c('à toutes les échelles', "mondiales", 'européennes', 'nationales', 'locales')), annotation=Label(e$echelle_politique_CC) )
# e$echelle_politique_CC <- relevel(as.factor(e$echelle_politique_CC), 'nationales')
# e$echelle_politique_CC <- relevel(e$echelle_politique_CC, 'européennes')
# e$echelle_politique_CC <- relevel(e$echelle_politique_CC, 'mondiales')
# e$echelle_politique_CC <- relevel(e$echelle_politique_CC, 'à toutes les échelles')
e$retraites <- e$statut_emploi == 'retraité·e'
e$actifs <- e$statut_emploi %in% c("autre actif", "CDD", "CDI", "fonctionnaire", "intérimaire ou contrat précaire")
e$etudiants <- e$statut_emploi == 'étudiant·e'
e$inactif <- e$statut_emploi %in% c("inactif", "au chômage")
label(e$retraites) <- "retraites: statut_emploi == 'retraité·e'"
label(e$actifs) <- 'actifs: statut_emploi %in% c("autre actif", "CDD", "CDI", "fonctionnaire", "intérimaire ou contrat précaire")'
label(e$etudiants) <- "etudiants: statut_emploi == 'étudiant·e'"
label(e$inactif) <- 'inactif: statut_emploi %in% c("inactif", "au chômage")'
e$single <- 1*(e$nb_adultes==1)
label(e$single) <- "single: nb_adultes == 1"
region_code <- function(code) {
reg <- "autre"
regions <- list(
"ARA" = c('01', '03', '07', '15', '26', '38', '42', '43', '63', '69', '73', '74'),
"Est" = c('21', '25', '39', '58', '70', '71', '89', '90', '08', '10', '51', '52', '54', '55', '57', '67', '68', '88'),
"Ouest" = c('22', '29', '35', '56', '14', '27', '50', '61', '76' ),
"Centre" = c('18', '28', '36', '37', '41', '45', '44', '49', '53', '72', '85'),
"Nord" = c('02', '59', '60', '62', '80'),
"IDF" = c('75', '77', '78', '91', '92', '93', '94', '95'),
"SO" = c('16', '17', '19', '23', '24', '33', '40', '47', '64', '79', '86', '87'),
"Occ" = c('09', '11', '12', '30', '31', '32', '34', '46', '48', '65', '66', '81', '82'),
"PACA" = c( '04', '05', '06', '13', '83', '84')
)
for (i in 1:9) if (as.numeric(code) %in% as.numeric(regions[[i]])) reg <- names(regions)[i]
return(reg)
}
region_dep <- rep("", 95)
for (i in 1:95) region_dep[i] <- region_code(i)
e$region_verif <- "autre"
e$region_verif[as.numeric(substr(e$code_postal, 1, 2)) %in% 1:95] <- region_dep[as.numeric(substr(e$code_postal, 1, 2))]
e$nb_vehicules_verif <- (e$nb_vehicules_texte=='Un') + 2*(e$nb_vehicules_texte=='Deux ou plus')
e$km[!is.na(e$km_0)] <- e$km_0[!is.na(e$km_0)]
e$km[!is.na(e$km_1)] <- e$km_1[!is.na(e$km_1)]
e$km[!is.na(e$km_2)] <- e$km_2[!is.na(e$km_2)]
label(e$km) <- "km: Nombre de kilomètres parcourus lors des 12 derniers mois en voiture ou moto (par le répondant pour nb_vehicules=0, par les véhicules sinon)"
e$conso[!is.na(e$conso_1)] <- e$conso_1[!is.na(e$conso_1)]
e$conso[!is.na(e$conso_2)] <- e$conso_2[!is.na(e$conso_2)]
e$conso[is.na(e$conso)] <- (6.39 + 7.31) / 2
label(e$conso) <- "conso:  Consommation moyenne du véhicule (en litres aux 100 km)"
# e$mauvaise_qualite[e$conso > 90] <- 1 + e$mauvaise_qualite[e$conso > 90] # 28
e$km_original <- e$km
e$conso_original <- e$conso
e$surface_original <- e$surface
e$km <- pmin(e$km, 200000) # TODO e$km[877] <- 1130 [586] <- 2250
e$conso <- pmin(e$conso, 30) # e$conso[851] <- 6.1
e$surface <- pmin(e$surface, 650) #
e$conso_1 <- pmin(e$conso_1, 30) #
e$conso_2 <- pmin(e$conso_2, 30) #
e$age_18_24 <- 1*(e$age == '18-24')
e$age_25_34 <- 1*(e$age == '25-34')
e$age_35_49 <- 1*(e$age == '35-49')
e$age_50_64 <- 1*(e$age == '50-64')
e$age_65_plus <- 1*(e$age == '65+')
e$tax_approval <- e$taxe_approbation=='Oui'
e$tax_acceptance <- e$taxe_approbation!='Non'
label(e$tax_approval) <- "tax_approval: Approbation initiale de la hausse de la taxe carbone compensée: taxe_approbation=='Oui'"
label(e$tax_acceptance) <- "tax_acceptance: Acceptation initiale de la hausse de la taxe carbone compensée: taxe_approbation!='Non'"
e$tax_feedback_approval <- e$taxe_feedback_approbation=='Oui'
e$tax_feedback_acceptance <- e$taxe_feedback_approbation!='Non'
label(e$tax_feedback_approval) <- "tax_feedback_approval: Approbation après le feedback de la hausse de la taxe carbone compensée: taxe_feedback_approbation=='Oui'"
label(e$tax_feedback_acceptance) <- "tax_feedback_acceptance: Acceptation après le feedback de la hausse de la taxe carbone compensée: taxe_feedback_approbation!='Non'"
# TODO: simule_gagnant faux
e$update_correct <- ((e$simule_gagnant==1 & e$gagnant_feedback_categorie=='Gagnant' & e$gagnant_categorie!='Gagnant')
+ (e$simule_gagnant==0 & e$gagnant_feedback_categorie=='Perdant' & e$gagnant_categorie!='Perdant')
- (e$simule_gagnant==1 & e$gagnant_feedback_categorie=='Perdant' & e$gagnant_categorie!='Perdant')
- (e$simule_gagnant==0 & e$gagnant_feedback_categorie=='Gagnant' & e$gagnant_categorie!='Gagnant'))
label(e$update_correct) <- "update_correct: Différence entre l'indicatrice de ne pas se penser gagnant/perdant et le penser après feedback infirmant, moins la même après feedback confirmant"
e$update_correct_large <- ((e$simule_gagnant==1 & ((e$gagnant_feedback_categorie=='Gagnant' & e$gagnant_categorie!='Gagnant') | (e$gagnant_feedback_categorie!='Perdant' & e$gagnant_categorie=='Perdant')))
+ (e$simule_gagnant==0 & ((e$gagnant_feedback_categorie=='Perdant' & e$gagnant_categorie!='Perdant') | (e$gagnant_feedback_categorie!='Gagnant' & e$gagnant_categorie=='Gagnant')))
- (e$simule_gagnant==1 & ((e$gagnant_feedback_categorie=='Perdant' & e$gagnant_categorie!='Perdant') | (e$gagnant_feedback_categorie!='Gagnant' & e$gagnant_categorie=='Gagnant')))
- (e$simule_gagnant==0 & ((e$gagnant_feedback_categorie=='Gagnant' & e$gagnant_categorie!='Gagnant') | (e$gagnant_feedback_categorie!='Perdant' & e$gagnant_categorie=='Perdant'))))
label(e$update_correct_large) <- "update_correct_large: Différence entre faire un update dans la bonne direction quand le feedback y conduit et faire un update dans la mauvaise direction"
e$feedback_confirme <- (e$gagnant_categorie=='Gagnant' & e$simule_gagnant==1) | (e$gagnant_categorie=='Perdant' & e$simule_gagnant==0)
e$feedback_infirme <- (e$gagnant_categorie=='Perdant' & e$simule_gagnant==1) | (e$gagnant_categorie=='Gagnant' & e$simule_gagnant==0)
e$feedback_confirme_large <- e$feedback_confirme | (e$gagnant_categorie!='Perdant' & e$simule_gagnant==1) | (e$gagnant_categorie!='Gagnant' & e$simule_gagnant==0)
e$feedback_infirme_large <- e$feedback_infirme | (e$gagnant_categorie!='Perdant' & e$simule_gagnant==0) | (e$gagnant_categorie!='Gagnant' & e$simule_gagnant==1)
label(e$feedback_confirme) <- "feedback_confirme: Indicatrice de se penser et être simulé gagnant/perdant (gagnant_categorie, simule_gagnant)"
label(e$feedback_infirme) <- "feedback_infirme: Indicatrice de se penser gagnant et être simulé perdant, ou l'inverse (gagnant_categorie, simule_gagnant)"
label(e$feedback_confirme_large) <- "feedback_confirme_large: Indicatrice de se penser non perdant et être simulé gagnant, ou de se penser non gagnant et être simulé perdant (gagnant_categorie, simule_gagnant)"
label(e$feedback_infirme_large) <- "feedback_infirme_large: Indicatrice de se penser non gagnant et être simulé gagnant, ou de se penser non perdant et être simulé perdant (gagnant_categorie, simule_gagnant)"
e$winning_category <- as.factor(e$gagnant_categorie)
e$winning_feedback_category <- as.factor(e$gagnant_feedback_categorie)
levels(e$winning_category) <- c('Winner', 'Unaffected', 'Loser')
levels(e$winning_feedback_category) <- c('Winner', 'Unaffected', 'Loser')
label(e$winning_category) <- "Winning category before feedback"
label(e$winning_feedback_category) <- "Winning category after feedback"
#   e$gaz <- grepl('gaz', e$chauffage, ignore.case = T)
#   e$fioul <- grepl('fioul', e$chauffage, ignore.case = T)
#   e$hausse_chauffage <- -55.507189 + e$gaz * 124.578484 + e$fioul * 221.145441 + e$surface * 0.652174
# hausses telles que calculées sans bug
e$hausse_diesel_verif[e$nb_vehicules == 0] <- (0.5*(6.39/100) * e$km * 1.4 * (1 - 0.4) * 0.090922)[e$nb_vehicules == 0] # share_diesel * conso * km * price * (1-elasticite) * price_increase
e$hausse_diesel_verif[e$nb_vehicules == 1] <- ((e$fuel_1=='Diesel') * (ifelse(is.na(e$conso_1), 6.39, e$conso_1)/100) * e$km * 1.4 * (1 - 0.4) * 0.090922)[e$nb_vehicules == 1] # DONE: replaced e$conso
e$hausse_diesel_verif[e$nb_vehicules == 2] <- (((e$fuel_2_1=='Diesel')*2/3 + (e$fuel_2_2=='Diesel')/3) * (ifelse(is.na(e$conso_2), 6.39, e$conso_2)/100) * e$km * 1.4 * (1 - 0.4) * 0.090922)[e$nb_vehicules == 2]
e$hausse_essence_verif[e$nb_vehicules == 0] <- (0.5*(7.31/100) * e$km * 1.45 * (1 - 0.4) * 0.076128)[e$nb_vehicules == 0] # share_diesel * conso * km * price * (1-elasticite) * price_increase
e$hausse_essence_verif[e$nb_vehicules == 1] <- ((e$fuel_1!='Diesel') * (ifelse(is.na(e$conso_1), 7.31, e$conso_1)/100) * e$km * 1.45 * (1 - 0.4) * 0.076128)[e$nb_vehicules == 1]
e$hausse_essence_verif[e$nb_vehicules == 2] <- (((e$fuel_2_1!='Diesel')*2/3 + (e$fuel_2_2!='Diesel')/3) * (ifelse(is.na(e$conso_2), 7.31, e$conso_2)/100) * e$km * 1.45 * (1 - 0.4) * 0.076128)[e$nb_vehicules == 2]
# hausses sans tenir compte de la conso renseignée
e$hausse_diesel_verif_na[e$nb_vehicules == 0] <- (0.5*(6.39/100) * e$km * 1.4 * (1 - 0.4) * 0.090922)[e$nb_vehicules == 0] # share_diesel * conso * km * price * (1-elasticite) * price_increase
e$hausse_diesel_verif_na[e$nb_vehicules == 1] <- ((e$fuel_1=='Diesel') * (6.39/100) * e$km * 1.4 * (1 - 0.4) * 0.090922)[e$nb_vehicules == 1] # DONE: replaced e$conso
e$hausse_diesel_verif_na[e$nb_vehicules == 2] <- (((e$fuel_2_1=='Diesel')*2/3 + (e$fuel_2_2=='Diesel')/3) * (6.39/100) * e$km * 1.4 * (1 - 0.4) * 0.090922)[e$nb_vehicules == 2]
e$hausse_essence_verif_na[e$nb_vehicules == 0] <- (0.5*(7.31/100) * e$km * 1.45 * (1 - 0.4) * 0.076128)[e$nb_vehicules == 0] # share_diesel * conso * km * price * (1-elasticite) * price_increase
e$hausse_essence_verif_na[e$nb_vehicules == 1] <- ((e$fuel_1!='Diesel') * (7.31/100) * e$km * 1.45 * (1 - 0.4) * 0.076128)[e$nb_vehicules == 1]
e$hausse_essence_verif_na[e$nb_vehicules == 2] <- (((e$fuel_2_1!='Diesel')*2/3 + (e$fuel_2_2!='Diesel')/3) * (7.31/100) * e$km * 1.45 * (1 - 0.4) * 0.076128)[e$nb_vehicules == 2]
e$bug <- e$date_enregistree < "2020-04-28 05:55:00" # 1:792: T / 793:1003: F
e$hausse_depenses_verif <- e$hausse_diesel_verif + e$hausse_essence_verif + e$hausse_chauffage # hausses telles que calculées sans bug (celle utilisée pour bug==F)
e$hausse_depenses_verif_na <- e$hausse_diesel_verif_na + e$hausse_essence_verif_na + e$hausse_chauffage # hausses sans tenir compte de la conso renseignée (celle utilisée pour bug==T)
e$feedback_correct <- (round(e$conso)==7 & !(e$fuel_2_1 %in% c('Diesel'))) | (!e$bug)
# /!\ avant 28/04 18h55 FR, hausse_diesel et _essence correspondaient à _verif_na, i.e. la conso renseignée n'étaient pas prise en compte. Il y avait un bug quand fuel_2_1 == Diesel, de sorte que tous ces gens avaient le feedback Gagnant et conso = NaN
#   e$hausse_carburants <- e$hausse_diesel + e$hausse_essence
#   e$depense_carburants <- (e$hausse_diesel / 0.090922 + e$hausse_essence / 0.076128) / (1 - 0.4)
#   label(e$hausse_carburants) <- "hausse_carburant: Hausse des dépenses de carburants simulées pour le ménage, suite à la taxe (élasticité de 0.4) (hausse_diesel + hausse_essence)"
#   label(e$depense_carburants) <- "depense_carburants: Dépense de carburants annuelle estimée du ménage, avant la réforme"
#   e$hausse_depenses <- e$hausse_carburants + e$hausse_chauffage
e$diesel <- (!is.na(e$fuel_1) & (e$fuel_1=='Diesel')) | (!is.na(e$fuel_2_2) & ((e$fuel_2_1=='Diesel') | (e$fuel_2_2=='Diesel')))
e$essence <- (!is.na(e$fuel_1) & (e$fuel_1=='Essence')) | (!is.na(e$fuel_2_2) & ((e$fuel_2_1=='Essence') | (e$fuel_2_2=='Essence')))
label(e$diesel) <- "diesel: Indicatrice de la possession d'un véhicule diesel par le ménage (fuel_1 ou fuel_2_1 ou fuel_2_2 = 'Diesel')"
label(e$essence) <- "essence: Indicatrice de la possession d'un véhicule à essence par le ménage (fuel_1 ou fuel_2_1 ou fuel_2_2 = 'Essence')"
e$revenu_conjoint <- e$rev_tot - e$revenu
e$revdisp <- round((e$rev_tot -  irpp(e$rev_tot, e$nb_adultes, e$taille_menage)))
e$uc <- uc(e$taille_menage, e$nb_14_et_plus)
e$niveau_vie <- e$revdisp / e$uc
e$perte <- 1 + round(as.numeric(gsub("\\D*", "", sub("\\set.*", "", sub("\\D*", "", e$hausse_depenses_subjective))))/45)
e$perte[grepl('au contraire', e$hausse_depenses_subjective)] <- -1
e$perte[grepl('aucune baisse', e$hausse_depenses_subjective)] <- 0
label(e$perte) <- "perte: Catégorie de hausse_depenses_subjective par UC, suite à hausse taxe carbone compensée, dans [-1;5] (seuils: 0/1/30/70/120/190)"
e$perte_echelle <- e$perte
label(e$perte) <- "perte: Catégorie de hausse_depenses_subjective (€ par UC par an), suite à hausse taxe carbone compensée, dans [-1;5] (seuils: 0/1/30/70/120/190)"
# cf. consistency_belief_losses.py pour les imputations. Average of BdF in each bin has been used.
e$perte_min <- -30*(e$perte==-1) + 1*(e$perte==1) + 30*(e$perte==2) + 70*(e$perte==3) + 120*(e$perte==4) + 190*(e$perte==5)
e$perte_max <-   0*(e$perte==-1) + 30*(e$perte==1) + 70*(e$perte==2) + 120*(e$perte==3) + 190*(e$perte==4) + 2000*(e$perte==5)
temp <- 224.25*(e$perte==5) + 147.91*(e$perte==4) + 92.83*(e$perte==3) + 48.28*(e$perte==2) + 13.72*(e$perte==1) - 1.66*(e$perte==-1) # TODO?: recalculer, surtout perte==5 (qui correspond à [190;280] au lieu de >190) et perte==-1 (ne sait pas d'où il sort). Pour info 405.55*(perte==6)
e$perte <- as.item(temp, labels = structure(c(224.25, 147.91, 92.83, 48.28, 13.72, 0, -1.66), names = c(">190", "120-190", "70-120", "30-70", "0-30", "0", "<0")), annotation=Label(e$perte))
e$simule_gain_menage <- 16.1 + pmin(2, e$nb_adultes) * 110 - e$hausse_depenses # NA pour les répondants chez qui le fuel_2_1=='Diesel' créait un bug (et qui avait tout le temps simule_gagnant==1) (élasticité de 0.15 sur le gaz)
e$simule_gain <- e$simule_gain_menage / e$uc
e$simule_gain_repondant <- 16.1 + 110 - e$hausse_depenses
label(e$simule_gain_menage) <- "simule_gain_menage: Gain net annuel simulé pour le ménage du répondant suite à une hausse de taxe carbone compensée: 16.1 + pmin(2, nb_adultes) * 110 - hausse_depenses"
label(e$simule_gain) <- "simule_gain: Gain net annuel simulé par UC pour le ménage du répondant suite à une hausse de taxe carbone compensée: (16.1 + pmin(2, nb_adultes) * 110 - hausse_depenses)/UC"
label(e$simule_gain_repondant) <- "simule_gain_repondant: Gain net annuel simulé pour le répondant (sans tenir compte du potentiel versement reçu par les autres adultes du ménage) suite à une hausse de taxe carbone compensée: 116.1 - hausse_depenses"
e$simule_gain_verif <- (16.1 + pmin(2, e$nb_adultes) * 110 - e$hausse_depenses_verif) / e$uc # élasticité de 0.15 sur le gaz
label(e$simule_gain_verif) <- "simule_gain_verif: Gain net annuel simulé par UC suite à une hausse de taxe carbone compensée (avec le bon calcul)"
# e$hausse_chauffage_interaction_inelastique <- 152.6786*e$fioul + e$surface * (1.6765*e$gaz + 1.1116*e$fioul) # TODO
# e$depense_chauffage <- ((1*(e$fioul) * (152.6786 + 1.1116*e$surface)) / 0.148079 + 1.6765*e$gaz*e$surface / 0.133456)
# e$hausse_depenses_interaction <- e$hausse_carburants + e$hausse_chauffage_interaction_inelastique * (1 - 0.2)
# e$hausse_depenses_interaction_inelastique <- e$hausse_carburants/(1 - 0.4) + e$hausse_chauffage_interaction_inelastique
# e$simule_gain_interaction <- (9.1 + pmin(2, e$nb_adultes) * 110 - e$hausse_depenses_interaction) / e$uc # élasticité de 0.2 pour le gaz
# e$simule_gagnant_interaction <- 1*(e$simule_gain_interaction > 0)
# e$simule_gain_inelastique <- (pmin(2, e$nb_adultes) * 110 - e$hausse_depenses_interaction_inelastique) / e$uc # élasticité nulle. Inclure + 22.4 rendrait le taux d'erreur uniforme suivant les deux catégories, on ne le fait pas pour être volontairement conservateur
# e$simule_gain_cible_interaction <- (e$versement_cible - e$hausse_depenses_interaction) / e$uc
# e$simule_gain_cible_interaction_inelastique <- (e$versement_cible - e$hausse_depenses_interaction_inelastique) / e$uc
# e$simule_gain_elast_perso[e$variante_partielle=='c'] <- (pmin(2, e$nb_adultes[e$variante_partielle=='c']) * 110 - (e$hausse_chauffage_interaction_inelastique[e$variante_partielle=='c'] * (1 + e$Elasticite_chauffage_perso[e$variante_partielle=='c']) + e$hausse_carburants[e$variante_partielle=='c'])) / e$uc[e$variante_partielle=='c']
# e$simule_gain_elast_perso[e$variante_partielle=='f'] <- (pmin(2, e$nb_adultes[e$variante_partielle=='f']) * 110 - (e$hausse_carburants[e$variante_partielle=='f'] * (1 + e$Elasticite_fuel_perso[e$variante_partielle=='f']) / (1 - 0.4) + e$hausse_chauffage_interaction_inelastique[e$variante_partielle=='f'] * (1 - 0.2))) / e$uc[e$variante_partielle=='f']
# label(e$hausse_chauffage_interaction_inelastique) <- "hausse_chauffage_interaction_inelastique: Hausse des dépenses de chauffage simulées pour le ménage avec des termes d'interaction entre surface et gaz/fioul plutôt que sans, suite à la taxe (élasticité nulle)"
# label(e$depense_chauffage) <- "depense_chauffage: Dépense de chauffage annuelle estimée du ménage, avant la réforme"
# label(e$simule_gain_interaction) <- "simule_gain_interaction: Gain net par UC annuel simulé avec des termes d'interaction surface*fioul/gaz pour le ménage du répondant suite à une hausse de taxe carbone compensée: 9.1 + pmin(2, nb_adultes) * 110 - hausse_chauffage_interaction_inelastique * 0.8 - hausse_carburants"
# label(e$simule_gagnant_interaction) <- "simule_gagnant_interaction: Indicatrice sur la prédiction que le ménage serait gagnant avec la taxe compensée, d'après nos simulations avec des termes d'interaction surface*fioul/gaz: 1*(simule_gain_interaction > 0)"
# label(e$simule_gain_inelastique) <- "simule_gain_inelastique: Gain net par UC annuel simulé (avec interaction) avec une élasticité nulle, pour le ménage du répondant suite à une hausse de taxe carbone compensée:  nb_adultes * 110 - hausse_chauffage_interaction_inelastique - hausse_carburants / 0.6"
# label(e$simule_gain_elast_perso) <- "simule_gain_elast_perso: Gain net par UC annuel simulé (avec interaction) avec l'élasticité renseignée par le répondant, pour le ménage du répondant suite à une hausse de taxe carbone compensée: pmin(2, nb_adultes) * 110 - hausse_partielle_inelastique * (1 - Elasticite_partielle_perso) - hausse_autre_partielle"
# label(e$hausse_depenses_interaction) <- "hausse_depenses_interaction: Hausse des dépenses énergétiques simulées pour le ménage avec les termes d'interaction, suite à la taxe (élasticité de 0.4/0.2 pour carburants/chauffage)"
# label(e$hausse_depenses_interaction_inelastique) <- "hausse_depenses_interaction_inelastique: Hausse des dépenses énergétiques simulées pour le ménage avec les termes d'interaction, suite à la taxe (élasticité nulle)"
# label(e$simule_gain_cible_interaction) <- "simule_gain_cible_interaction: Gain net par UC annuel simulé avec des termes d'interaction surface*fioul/gaz pour le ménage du répondant suite à une hausse de taxe carbone avec compensation ciblée: versement_cible - hausse_depenses_interaction) / uc"
# label(e$simule_gain_cible_interaction_inelastique) <- "simule_gain_cible_interaction_inelastique: Gain net par UC annuel simulé avec des termes d'interaction surface*fioul/gaz pour le ménage du répondant suite à une hausse de taxe carbone avec compensation ciblée: versement_cible - hausse_depenses_interaction_inelastique) / uc"
e$Revenu <- e$revenu/1e3 # TODO: labels
e$Revenu_conjoint <- e$revenu_conjoint/1e3
e$percentile_revenu <- 100*percentiles_revenu(e$revenu*12)
e$percentile_revenu_conjoint  <- 100*percentiles_revenu(e$revenu_conjoint*12)
e$Simule_gain <- e$simule_gain/1e3
e$Revenu2 <- e$revenu^2/1e6
e$Revenu_conjoint2 <- e$revenu_conjoint^2/1e6
e$Simule_gain2 <- e$simule_gain^2/1e6
# e$biais_sur <- abs(e$simule_gain - e$gain) > 110
# label(e$biais_sur) <- "biais_sur: Certitude à 99% que le gain subjectif du répondant est biaisé à la baisse: abs(simule_gain - gain) > 110"
e$origine_taxe <- relevel(as.factor(e$origine_taxe), 'inconnue')
e$label_taxe <- relevel(as.factor(e$label_taxe), 'taxe')
e$variante_taxe_carbone <- relevel(as.factor(e$variante_taxe_carbone), 'neutre')
e$hausse_depenses_par_uc <- e$hausse_depenses/e$uc # TODO: hausse_depenses_interaction_par_uc
label(e$hausse_depenses_par_uc) <- "hausse_depenses_par_uc: Hausse des dépenses énergétiques par UC suite à la taxe (utilise la variable buggué hausse_depenses) (élasticité de 0.4/0.2 pour carburants/chauffage)"
e$hausse_depenses_verif_par_uc <- e$hausse_depenses_verif/e$uc # TODO: hausse_depenses_interaction_par_uc
label(e$hausse_depenses_verif_par_uc) <- "hausse_depenses_verif_par_uc: Hausse des dépenses énergétiques par UC suite à la taxe (élasticité de 0.4/0.2 pour carburants/chauffage)"
e$biais <- e$hausse_depenses_verif_par_uc - as.numeric(e$perte)
e$biais_plus <- e$hausse_depenses_verif_par_uc - as.numeric(e$perte_min)
e$biais_moins <- e$hausse_depenses_verif_par_uc - as.numeric(e$perte_max)
label(e$biais) <- "biais: hausse_depenses_par_uc - perte Différence entre la hausse objective et subjective (moyenne de l'intervalle) de dépenses par UC d'énergies fossiles:  (< 0 : pessimisme)"
label(e$biais_plus) <- "biais_plus: hausse_depenses_par_uc - perte_min Différence entre la hausse objective et subjective (min de l'intervalle) de dépenses par UC d'énergies fossiles: (< 0 : pessimisme)"
label(e$biais_moins) <- "biais_moins: hausse_depenses_par_uc - perte_max Différence entre la hausse objective et subjective (max de l'intervalle) de dépenses par UC d'énergies fossiles: (< 0 : pessimisme)"
e$gain <- (110/e$uc)*pmin(2, e$nb_adultes)*(e$confiance_dividende + 1)/2 - e$perte
label(e$gain) <- "gain: (110/uc)*min(2, nb_adultes)*(confiance_dividende == Oui + 0.5*confiance_dividende == À moitié) - perte Gain net par UC subjectif du ménage suite à une taxe carbone avec dividende, en tenant compte que le répondant peut croire que son ménage ne recevra pas, ou à moitié, le dividende."
e$gain_min <- (110/e$uc)*pmin(2, e$nb_adultes)*(e$confiance_dividende==1) - e$perte_max
label(e$gain_min) <- "gain: (110/uc)*min(2, nb_adultes)*(confiance_dividende == Oui) - perte_max Gain net par UC subjectif du ménage suite à une taxe carbone avec dividende, où le dividende est ajouté seulement si le répondant y croit"
# e$nb_politiques_env <- 0
# variables_politiques_environnementales <- c("taxe_kerosene", "taxe_viande", "normes_isolation", "normes_vehicules", "controle_technique", "interdiction_polluants",
#                                             "peages_urbains", "fonds_mondial") # "rattrapage_diesel"
# for (v in variables_politiques_environnementales) e$nb_politiques_env[e[[v]]>0] <- 1 + e$nb_politiques_env[e[[v]]>0]
variables_politiques_1 <<- paste('pour', c("fin_gaspillage", "cantines_vertes", "voies_reservees", "densification", "renouvelables", "taxe_distance"), sep='_') # 6
variables_politiques_2 <<- paste('pour', c("bonus_malus", "aides_train", "fonds_mondial", "taxe_viande", "conditionner_aides", "restriction_centre_ville", "limitation_110", "obligation_renovation"), sep='_') # 8
variables_referendum <<- paste('referendum', c("obligation_renovation", "cheque_bio", "interdiction_publicite", "interdiction_polluants", "taxe_dividendes", "consigne"), sep='_') # 6
variables_politiques_env <<- c(variables_politiques_1, variables_politiques_2, variables_referendum) # 20
e$nb_referenda <- e$nb_politiques_2 <- e$nb_politiques_1 <- 0
for (v in variables_referendum) e$nb_referenda[e[[v]]>0] <- 1 + e$nb_referenda[e[[v]]>0]
for (v in variables_politiques_2) e$nb_politiques_2[e[[v]]>0] <- 1 + e$nb_politiques_2[e[[v]]>0]
for (v in variables_politiques_1) e$nb_politiques_1[e[[v]]>0] <- 1 + e$nb_politiques_1[e[[v]]>0]
e$nb_referenda_politiques_2 <- e$nb_referenda + e$nb_politiques_2
e$nb_politiques_env <- e$nb_referenda + e$nb_politiques_1 # TODO: add carbon tax
e$prop_referenda <- e$nb_referenda / 6
e$prop_politiques_1 <- e$nb_politiques_1 / 6
e$prop_politiques_2 <- e$nb_politiques_2 / 8
e$prop_referenda_politiques_2 <- e$nb_referenda_politiques_2 / 14
e$prop_politiques_env <- e$nb_politiques_env / 20
label(e$nb_referenda) <- "nb_referenda: Nombre de referendum_ où le répondant voterait Oui (cf. les 6 variables_referendum) ~ info_CCC"
label(e$nb_politiques_1) <- "nb_politiques_1: Nombre de politiques environnementales de la 1ère partie soutenues par le répondant (cf. les 6 variables_politiques_1)"
label(e$nb_politiques_2) <- "nb_politiques_2: Nombre de politiques environnementales de la 2è partie soutenues par le répondant (cf. les 6 variables_politiques_2) ~ info_CCC"
label(e$nb_politiques_env) <- "nb_politiques_env: Nombre de politiques environnementales soutenues par le répondant = nb_referenda + nb_politiques_1 + nb_politiques_2 (cf. les 20 variables_politiques_env)"
label(e$nb_referenda_politiques_2) <- "nb_referenda_politiques_2: Nombre de politiques environnementales de la 2è partie soutenues par le répondant = nb_referenda + nb_politiques_2 (cf. les 14 variables_politiques_2 et variables_referendum)"
label(e$prop_referenda) <- "prop_referenda: Proportion de referendum_ où le répondant voterait Oui (cf. les 6 variables_referendum) ~ info_CCC"
label(e$prop_politiques_1) <- "prop_politiques_1: Proportion de politiques environnementales de la 1ère partie soutenues par le répondant (cf. les 6 variables_politiques_1)"
label(e$prop_politiques_2) <- "prop_politiques_2: Proportion de politiques environnementales de la 2è partie soutenues par le répondant (cf. les 6 variables_politiques_2) ~ info_CCC"
label(e$prop_politiques_env) <- "prop_politiques_env: Proportion de politiques environnementales soutenues par le répondant = prop_referenda + prop_politiques_1 + prop_politiques_2 (cf. les 20 variables_politiques_env)"
label(e$prop_referenda_politiques_2) <- "prop_referenda_politiques_2: Proportion de politiques environnementales de la 2è partie soutenues par le répondant = nb_referenda + nb_politiques_2 (cf. les 14 variables_politiques_2 et variables_referendum)"
e$correct_soutenu_bonus_malus <- e$soutenu_bonus_malus==T # ~65% pour
e$correct_soutenu_normes_isolation <- e$soutenu_normes_isolation==T # AT: 72% pour
e$correct_soutenu_obligation_renovation <- e$soutenu_obligation_renovation==T # referendum_obligation_renovation: ~75% Oui / pour_obligation_renovation: ~83% pour
e$correct_soutenu_limitation_110 <- e$soutenu_limitation_110==F # pour_limitation_110: ~53% contre
e$nb_correct_soutenu <- e$correct_soutenu_bonus_malus + e$correct_soutenu_normes_isolation + e$correct_soutenu_obligation_renovation + e$correct_soutenu_limitation_110
label(e$correct_soutenu_bonus_malus) <- "correct_soutenu_bonus_malus: soutenu_bonus_malus==T - Un renforcement du bonus/malus écologique pour l’achat d’un véhicule - Réponse correcte à si cette politique est soutenue par une majorité de Français (obligation_renovation/normes_isolation/bonus_malus/limitation_110)"
label(e$correct_soutenu_obligation_renovation) <- "correct_soutenu_obligation_renovation: soutenu_obligation_renovation==T - L'obligation de rénovation thermique des logements les moins bien isolés assortie d'aides de l'État - Réponse correcte à si cette politique est soutenue par une majorité de Français (obligation_renovation/normes_isolation/bonus_malus/limitation_110)"
label(e$correct_soutenu_limitation_110) <- "correct_soutenu_limitation_110: soutenu_limitation_110==F - L'abaissement de la limitation de vitesse sur les autoroutes à 110 km/h - Réponse correcte à si cette politique est soutenue par une majorité de Français (obligation_renovation/normes_isolation/bonus_malus/limitation_110)"
label(e$correct_soutenu_normes_isolation) <- "correct_soutenu_normes_isolation: soutenu_normes_isolation==T - Des normes plus strictes sur l'isolation pour les nouveaux bâtiments - Réponse correcte à si cette politique est soutenue par une majorité de Français (obligation_renovation/normes_isolation/bonus_malus/limitation_110)"
label(e$nb_correct_soutenu) <- "nb_correct_soutenu: Nombre de réponses correctes à si cette politique est soutenue par une majorité de Français (obligation_renovation/normes_isolation/bonus_malus/limitation_110)"
variables_devoile <<- paste("CCC_devoile", c("obligation_renovation", "limitation_110", "fonds_mondial", "taxe_viande"), sep='_')
e$correct_devoile_obligation_renovation <- e$CCC_devoile_obligation_renovation > 0 # https://www.lemonde.fr/climat/article/2020/04/11/climat-les-50-propositions-de-la-convention-citoyenne-pour-porter-l-espoir-d-un-nouveau-modele-de-societe_6036293_1652612.html
e$correct_devoile_limitation_110 <- e$CCC_devoile_limitation_110 < 0
e$correct_devoile_fonds_mondial <- e$CCC_devoile_fonds_mondial < 0
e$correct_devoile_taxe_viande <- e$CCC_devoile_taxe_viande < 0
e$nb_correct_devoile <- e$correct_devoile_obligation_renovation + e$correct_devoile_limitation_110 + e$correct_devoile_fonds_mondial + e$correct_devoile_taxe_viande
label(e$correct_devoile_obligation_renovation) <- "correct_devoile_obligation_renovation: CCC_devoile_obligation_renovation > 0 - [Si pas Aucun à sait_CCC_devoilee] L'obligation de rénovation thermique des logements les moins bien isolés assortie d'aides de l'État - Réponse correcte à si cette mesure de la CCC a été dévoilée ~ info_CCC"
label(e$correct_devoile_limitation_110) <- "correct_devoile_limitation_110: CCC_devoile_limitation_110 < 0 - [Si pas Aucun à sait_CCC_devoilee] L'abaissement de la limitation de vitesse sur les autoroutes à 110 km/h - Réponse correcte à si cette mesure de la CCC a été dévoilée ~ info_CCC"
label(e$correct_devoile_fonds_mondial) <- "correct_devoile_fonds_mondial: CCC_devoile_fonds_mondial < 0 - [Si pas Aucun à sait_CCC_devoilee] Une contribution à un fonds mondial pour le climat - Réponse correcte à si cette mesure de la CCC a été dévoilée ~ info_CCC"
label(e$correct_devoile_taxe_viande) <- "correct_devoile_taxe_viande: CCC_devoile_taxe_viande < 0 - [Si pas Aucun à sait_CCC_devoilee] Une taxe sur la viande rouge - Réponse correcte à si cette mesure de la CCC a été dévoilée ~ info_CCC"
label(e$nb_correct_devoile) <- "nb_correct_devoile: Nombre de réponses correctes à si cette mesure de la CCC a été dévoilée (obligation_renovation=T/limitation_110=F/taxe_viande=F/fonds_mondial=F)"
obstacles <<- c("lobbies", "manque_volonte", "manque_cooperation", "inegalites", "incertitudes", "demographie", "technologies", "rien")
variables_obstacles <<- paste("obstacles", obstacles, sep="_")
for (i in 1:8)  {
for (v in obstacles) e[[paste("obstacle", i, sep="_")]][e[[paste("obstacles", v, sep="_")]]==i] <- v
label(e[[paste("obstacle", i, sep="_")]]) <- paste("obstacle_", i, ": Obstacle à la lutte contre le CC classé en position ", i, " (1: le plus - 7: le moins important) (", paste(obstacles, collapse = "/"), ")", sep="") }
e$Connaissance_CCC <- NA
e$connaissance_CCC_bon_francais <- e$connaissance_CCC_sortition <- e$connaissance_CCC_mesures <- e$connaissance_CCC_temporalite <- e$connaissance_CCC_internet <- e$connaissance_CCC == "FALSE"
e$connaissance_CCC_150 <- e$connaissance_CCC == "FALSE"
e$Connaissance_CCC[c(1,3,10,13,17,19,29,30,34,45,49,51,54,57,64,68,74,77,78,86,93,97,103,121,129,136,139,151,153,155,156,159,162,163,164,174,179,181,182,183,184,187,191,194,196,197,201)] <- "aucune" #
e$Connaissance_CCC[c(208,210,217,218,223,232,236,242,250,255,259,260,266,268,271,272,278,282,285,289,291,297,298,301,310,312,313,324,327,328,349,352,355,357,361,372)] <- "aucune" #
e$Connaissance_CCC[c(383,385,389,390,394,402,410,411,415,416,417,419,421,422,424,425,429,431,442,444,446,450,451,457,458,461,463,465,466,468,469,472,476,485,487,488,492)] <- "aucune" # ex: "nsp" 19, 402, # doublons 450-451, 421-422, 468-469, 515-516?
e$Connaissance_CCC[c(496,502,515,516,520,526,532,533,534,535,537,540,541,546,548,550,551,552,553,555,557,560,561,562,564,567,568,572,578,582,584,586,587,588,589,597,598,602,603,604)] <- "aucune" # ex: 598
e$Connaissance_CCC[c(610,619,621,622,625,626,629,630,631,634,636,638,639,650,654,656,657,659,660,665,666,667,669,674,677,678,681,686,688,690,694,698,699,702,707,709,712,713,720,721,725,727)] <- "aucune" # ex: 598
e$Connaissance_CCC[c(731,733,738,747,748,752,753,757,760,762,763,765,766,768,771,772,775,781,782,783,785,787,790,793,798,823,826,830,844,845,846,847,848,859,860,862,865,868,872,873)] <- "aucune" # ex: 598
e$Connaissance_CCC[c(876,891,883,887,893,897,899,908,909,911,913,915,916,917,926,930,939,940,943,944,946,955,956,957,960,962,965,966,967,973,977,978,986,992,995,998,1000,1001,1002,1003)] <- "aucune" # ex: 598, 915
e$Connaissance_CCC[c(73,118,143,239,248,270,280,283,326,381,388,471,489,491,504,590,592,632,743,866,871,929,951,952,993)] <- "faux" # ex: 239, 326
e$Connaissance_CCC[c(6,22,25,66,72,80,90,100,107,110,111,152,166,170,177,188,214,227,238,276,281,316,319,320,323,339,360,387,393,396,399,408,432,452,454,474,498,503)] <- "hors sujet" # ex: 25, 71, 90, 107 # 25-110-432 doublon ?
e$Connaissance_CCC[c(510,570,573,575,591,664,682,715,716,736,737,739,741,744,767,795,839,840,842,849,854,861,892,895,921,927,928,936,945,953,959,964,984,999)] <- "hors sujet" # ex: 25, 71, 90, 107, 570, 767, 839, 840, 861 # 25-110-432 570-573 1001-1003 doublon ? TODO
e$Connaissance_CCC[c(9,31,33,35,37,38,55,59,81,101,120,193,202,233,235,237,249,252,273,293,294,311,358,359,363,367,374,414,434,455,457,460,479,482,484,490,508,519,522,524,538)] <- "trop vague" # ex: 374, 457, 490 [490 = 2.0?]
e$Connaissance_CCC[c(581,614,623,624,628,642,643,645,655,663,671,687,703,704,705,724,746,754,773,780,792,818,886,888,900,901,902,912,934,954)] <- "trop vague" # ex: 374, 457, 490
e$Connaissance_CCC[c(8,15,18,20,26,27,28,43,65,75,84,85,89,101,123,132,135,140,142,144,145,147,165,168,172,176,207,220,222,240,247,275,288,303,308,341,347,348,351,356,364,377,473,493)] <- "approximatif" # ex: 607
e$Connaissance_CCC[c(401,404,423,427,505,506,507,530,531,618,670,672,693,695,696,728,729,732,740,751,758,776,786,796,800,802,831,832,857,875,877,906,914,920,937,938,972,982,987,988)] <- "approximatif"
e$Connaissance_CCC[c(7,24,62,67,71,84,91,106,117,127,130,131,134,150,154,158,173,175,186,202,209,226,246,247,253,262,284,302,307,334,337,380,386,391,400,407,418,420,428,440,448,449,470,481)] <- "bonne" # ex: 24, 117, 334 ; contient généralement mesures, sortition, 150 ou date
e$Connaissance_CCC[c(494,501,514,542,547,558,563,566,607,609,611,613,646,665,684,689,691,700,718,722,770,779,797,811,815,863,898,910,923,935,941,950,991)] <- "bonne" # ex: 24, 117, 334 ; contient généralement mesures, sortition, 150 ou date
e$connaissance_CCC_bon_francais[c(6,15,18,20,24,27,62,84,85,91,130,134,140,145,154,158,165,170,175,193,202,207,220,226,242,247,248,253,262,288,347,348,351,356,360,364,377,380,386,387,391)] <- "bon français" # ex: ; pas de faute d'orthographe, grammaire correcte, phrase élaborée (i.e. pas juste "je ne sais pas")
e$connaissance_CCC_bon_francais[c(399,404,418,419,423,425,434,448,449,454,457,460,470,471,473,481,488,493,501,507,508,522,542,562,581,598,609,611,613,665,691,700,728,729,732,741,752)] <- "bon français" # ex: ; pas de faute d'orthographe, grammaire correcte, phrase élaborée (i.e. pas juste "je ne sais pas")
e$connaissance_CCC_bon_francais[c(770,776,779,796,797,875,877,895,898,935,937,988,991,993)] <- "bon français" # ex: ; pas de faute d'orthographe, grammaire correcte, phrase élaborée (i.e. pas juste "je ne sais pas")
e$connaissance_CCC_sortition[c(7,62,67,71,91,106,127,130,131,134,150,154,158,165,173,175,186,202,207,209,239,246,247,253,262,284,302,308,334,348,380,407,420,428,440,448,449,470,481)] <- "sortition"
e$connaissance_CCC_sortition[c(494,501,514,530,542,547,558,566,607,609,611,613,646,672,684,689,691,693,700,722,751,779,797,811,815,831,832,857,863,898,906,910,914,923,929,941,972,991)] <- "sortition"
e$connaissance_CCC_mesures[c(7,62,67,71,130,135,142,154,175,186,202,226,246,262,302,307,337,356,386,400,404,407,428,448,449,481,494,505,531,558,563,566,607,609,611,613,646,670,689)] <- "mesures"
e$connaissance_CCC_mesures[c(700,718,722,770,779,786,802,811,815,819,863,898,920,938,941,950,982,991,993)] <- "mesures"
e$connaissance_CCC_internet[c(44,70,239,279,512,606,701)] <- "internet"
e$connaissance_CCC_temporalite[c(84,117,131,150,172,235,249,293,302,427,501)] <- "temporalité"
e$connaissance_CCC_150[which(c(grepl('150', e$connaissance_CCC)),470)] <- "150"
variables_connaissance_CCC <<- c("bon_francais", "sortition", "mesures", "temporalite", "internet", "150")
for (v in variables_connaissance_CCC) e[[paste("connaissance_CCC", v, sep="_")]] <- e[[paste("connaissance_CCC", v, sep="_")]]!="FALSE"
temp <- -2*(e$Connaissance_CCC=="hors sujet") -1*(e$Connaissance_CCC=="faux") + 1*(e$Connaissance_CCC=="trop vague") + 2*(e$Connaissance_CCC=="approximatif") + 3*(e$Connaissance_CCC=="bonne")
temp[e$connaissance_CCC_internet==T] <- 2
e$Connaissance_CCC <- as.item(temp, labels = structure(c(-2:3), names=c("hors sujet", "faux", "aucune", "trop vague", "approximatif", "bonne")),
annotation="Connaissance_CCC: connaissance_CCC recodé en hors sujet/faux/aucune/approximatif/bonne (incl. internet) - Décrivez ce que vous savez de la Convention Citoyenne pour le Climat. (champ libre)")
label(e$connaissance_CCC_bon_francais) <- "connaissance_CCC_bon_francais: Indicatrice que la réponse à connaissance_CCC est constituée d'une phrase grammaticalement correcte et sans faute d'orthographe (à l'exception des phrases très courtes type 'Je ne sais pas')"
label(e$connaissance_CCC_sortition) <- "connaissance_CCC_sortition: Indicatrice que la réponse à connaissance_CCC mentionne le tirage au sort, ou du moins le caractère 'lambda' ou hétérogène des citoyens de la CCC"
label(e$connaissance_CCC_mesures) <- "connaissance_CCC_mesures: Indicatrice que la réponse à connaissance_CCC mentionne le fait que la CCC rend des propositions de mesures"
label(e$connaissance_CCC_temporalite) <- "connaissance_CCC_temporalite: Indicatrice que la réponse à connaissance_CCC mentionne un élément de la temporalité de la CCC (date de début ou de fin, ou fréquence de ses réunions)"
label(e$connaissance_CCC_internet) <- "connaissance_CCC_internet: Indicatrice que la réponse à connaissance_CCC a été copiée à partir des résultats d'une requête internet"
label(e$connaissance_CCC_150) <- "connaissance_CCC_150: Indicatrice que la réponse à connaissance_CCC mentionne le nombre de membres de la CCC (150)" # autre indicatrice qui aurait pu être intéressante : si ça mentionne que la CCC est française ou, au contraire, se méprend en parlant d'une initiative internationale
e <- e[, -c(9:17, 131, 132, 134, 136, 137, 139)] # 39:49,
return(e)
}
e <- prepare_e()
(France_CC2 <- barres(vars = "France_CC", thin = F, miss = F, labels="La France doit prendre de l’avance \nsur d’autres pays dans la lutte contre le changement climatique"))
save_plotly(France_CC2)
(France_CC_CCC <- barres(vars = "France_CC", df = c, thin = F, miss = F, labels="La France doit prendre de l’avance \nsur d’autres pays dans la lutte contre le changement climatique"))
save_plotly(France_CC_CCC)
(France_CC_both <- barres(data=dataN2("France_CC", miss = T), miss = F, sort = F, labels = c('CCC', 'Population'), legend=dataN2("France_CC", miss = F, return = 'legend')))
(France_CC_both <- barres(data=dataN2("France_CC"), miss = F, sort = F, labels = c('CCC', 'Population'), legend=dataN2("France_CC", miss = F, return = 'legend')))
(France_CC_both <- barres(data=dataN2("France_CC"), miss = F, sort = F, labels = c('CCC', 'Population'), legend=dataN2("France_CC", return = 'legend')))
dataN2("France_CC")
dataN2("France_CC", miss=F)
(France_CC_both <- barres(data=dataN2("France_CC", miss=F), miss = F, sort = F, labels = c('CCC', 'Population'), legend=dataN2("France_CC", return = 'legend', miss=F)))
(France_CC_both <- barres(data=dataN2("France_CC", miss=F), miss = F, rev = F, sort = F, labels = c('CCC', 'Population'), legend=dataN2("France_CC", return = 'legend', miss=F)))
(France_CC_both <- barres(data=dataN2("France_CC", miss=F), miss = F, rev = T, sort = F, labels = c('CCC', 'Population'), legend=dataN2("France_CC", return = 'legend', miss=F)))
(France_CC_both <- barres(data=dataN2("France_CC", miss=F), miss = F, rev_color = T, sort = F, labels = c('CCC', 'Population'), legend=dataN2("France_CC", return = 'legend', miss=F)))
(France_CC_both <- barres(data=dataN2("France_CC", miss=F, rev = T), miss = F, rev_color = T, sort = F, labels = c('CCC', 'Population'), legend=rev(dataN2("France_CC", return = 'legend', miss=F))))
(France_CC_both <- barres(data=dataN2("France_CC", miss=F, rev = T), miss = F, sort = F, labels = c('CCC', 'Population'), legend=rev(dataN2("France_CC", return = 'legend', miss=F))))
save_plotly(France_CC_both)
decrit(e$echelle_politique_CC)
decrit(c$echelle_politique_CC_1e)
c$echelle_politique_CC <- -2*(c$echelle_politique_CC_1e=='Toute échelle') -1*(c$echelle_politique_CC_1e=='Mondiale') + (c$echelle_politique_CC_1e=='Nationale') + 2*(c$echelle_politique_CC_1e=='Locale')
c$echelle_politique_CC <- as.item(c$echelle_politique_CC, labels = structure(c(-2:2), names=c('à toutes les échelles', "mondiales", 'européennes', 'nationales', 'locales')), annotation=Label(c$echelle_politique_CC_1e) )
(echelle_politique_CC2 <- barres(vars = "echelle_politique_CC", thin = F, rev = F, miss = F, labels="Le changement climatique exige\n d’être pris en charge par des politiques ..."))
save_plotly(echelle_politique_CC2)
(echelle_politique_CC2 <- barres(vars = "echelle_politique_CC", thin = F, rev = F, miss = F, labels="Le changement climatique exige\n d’être pris en charge par des politiques ..."))
save_plotly(echelle_politique_CC2)
(echelle_politique_CC_CCC <- barres(vars = "echelle_politique_CC", df = c, thin = F, miss = F, labels="Le changement climatique exige\n d’être pris en charge par des politiques ..."))
save_plotly(echelle_politique_CC_CCC)
(echelle_politique_CC_CCC <- barres(vars = "echelle_politique_CC", df = c, thin = F, rev = F,  miss = F, labels="Le changement climatique exige\n d’être pris en charge par des politiques ..."))
save_plotly(echelle_politique_CC_CCC)
(echelle_politique_CC_both <- barres(data=dataN2("echelle_politique_CC", miss = F), miss = F, sort = F, rev_color = T, labels = c('CCC', 'Population'), legend=dataN2("echelle_politique_CC", miss = F, return = 'legend')))
(echelle_politique_CC_both <- barres(data=dataN2("echelle_politique_CC", miss = F), miss = F, sort = F, labels = c('CCC', 'Population'), legend=dataN2("echelle_politique_CC", miss = F, return = 'legend')))
(echelle_politique_CC_both <- barres(data=dataN2("echelle_politique_CC", miss = F), miss = F, sort = F, labels = c('CCC', 'Population'), legend=dataN2("echelle_politique_CC", miss = F, return = 'legend')))
save_plotly(echelle_politique_CC_both)
decrit(c$redistribution_1e)
class(c$redistribution_1e)
class(e$redistribution)
c$redistribution <- c$redistribution_1e
(redistribution2 <- barres(vars = "redistribution", rev = F, miss = F, labels="Il faudrait prendre aux riches pour donner aux pauvres"))
(redistribution_CCC <- barres(vars = "redistribution", df = c, rev = F,  miss = F, labels="Il faudrait prendre aux riches pour donner aux pauvres"))
(redistribution_both <- barres(data=dataN2("redistribution", miss = F), rev = F,  miss = F, sort = F, labels = c('CCC', 'Population'), legend=dataN2("redistribution", miss = F, return = 'legend')))
decrit(c$redistribution)
9/139
8/139
which(c$redistribution==2)
c$redistribution[28] <- 1 # so that there is one answer "1", avoiding a bug
(redistribution2 <- barres(vars = "redistribution", rev = F, miss = F, labels="Il faudrait prendre aux riches pour donner aux pauvres"))
save_plotly(redistribution2)
(redistribution_CCC <- barres(vars = "redistribution", df = c, rev = F,  miss = F, labels="Il faudrait prendre aux riches pour donner aux pauvres"))
save_plotly(redistribution_CCC)
(redistribution_both <- barres(data=dataN2("redistribution", miss = F), rev = F,  miss = F, sort = F, labels = c('CCC', 'Population'), legend=dataN2("redistribution", miss = F, return = 'legend')))
save_plotly(redistribution_both)
decrit(c$importance_associatif_1e)
decrit(c$importance_environnement_1e)
data_importance_CCC <- matrix(0, nrow = 11, ncol = 3)
for (i in 0:10) for (j in 1:3) data_importance_CCC[i, j] <- length(which(c[[variables_importance[j]]]==i))/length(which(!is.na(c[[variables_importance[j]]])))
(variables_importance_CCC <- barres(data = data_importance_CCC, rev = F,  rev_color = T, miss = F, labels=c("L'action sociale et associative", "La protection de l'environnement", "L’amélioration de mon niveau de vie et de confort")))
data_importance_CCC
variables_importance
for (i in 0:10) for (j in 1:3) data_importance_CCC[i, j] <- length(which(c[[variables_importance[j]]]==i))/length(which(!is.na(c[[paste(variables_importance[j], '_1e', sep='')]])))
data_importance_CCC <- matrix(0, nrow = 11, ncol = 3)
for (i in 0:10) for (j in 1:3) data_importance_CCC[i, j] <- length(which(c[[variables_importance[j]]]==i))/length(which(!is.na(c[[paste(variables_importance[j], '_1e', sep='')]])))
(variables_importance_CCC <- barres(data = data_importance_CCC, rev = F,  rev_color = T, miss = F, labels=c("L'action sociale et associative", "La protection de l'environnement", "L’amélioration de mon niveau de vie et de confort")))
data_importance_CCC
data_importance_CCC <- matrix(0, nrow = 11, ncol = 3)
for (i in 0:10) for (j in 1:3) data_importance_CCC[i, j] <- length(which(c[[paste(variables_importance[j], '_1e', sep='')]]==i))/length(which(!is.na(c[[paste(variables_importance[j], '_1e', sep='')]])))
(variables_importance_CCC <- barres(data = data_importance_CCC, rev = F,  rev_color = T, miss = F, labels=c("L'action sociale et associative", "La protection de l'environnement", "L’amélioration de mon niveau de vie et de confort")))
data_importance_CCC
variables_importance
decrit(c$importance_associatif_1e)
length(which(c[[importance_associatif_1e]]==0))
length(which(c[["importance_associatif_1e"]]==0))
length(which(!is.na(c[["importance_associatif_1e"]])))
data_importance_CCC <- matrix(0, nrow = 11, ncol = 3)
for (i in 0:10) { for (j in 1:3) data_importance_CCC[i, j] <- length(which(c[[paste(variables_importance[j], '_1e', sep='')]]==i))/length(which(!is.na(c[[paste(variables_importance[j], '_1e', sep='')]]))) }
data_importance_CCC
data_importance_CCC <- matrix(0, nrow = 11, ncol = 3)
for (i in 0:10) { for (j in 1:3) data_importance_CCC[i+1, j] <- length(which(c[[paste(variables_importance[j], '_1e', sep='')]]==i))/length(which(!is.na(c[[paste(variables_importance[j], '_1e', sep='')]]))) }
variables_importance_CCC
data_importance_CCC <- matrix(0, nrow = 11, ncol = 3)
for (i in 0:10) { for (j in 1:3) data_importance_CCC[i+1, j] <- length(which(c[[paste(variables_importance[j], '_1e', sep='')]]==i))/length(which(!is.na(c[[paste(variables_importance[j], '_1e', sep='')]]))) }
variables_importance_CCC
data_importance_CCC
(variables_importance_CCC <- barres(data = data_importance_CCC, rev = F,  rev_color = T, miss = F, labels=c("L'action sociale et associative", "La protection de l'environnement", "L’amélioration de mon niveau de vie et de confort")))
(variables_importance_CCC <- barres(data = data_importance_CCC, rev = F,  rev_color = T, miss = F, legend = 0:10, labels=c("L'action sociale et associative", "La protection de l'environnement", "L’amélioration de mon niveau de vie et de confort")))
(variables_importance_CCC <- barres(data = data_importance_CCC, rev = F,  rev_color = T, miss = F, legend = 0:10, labels=c("L'action sociale et associative", "La protection de l'environnement", "L’amélioration de mon niveau de vie et de confort")))
save_plotly(variables_importance_CCC)
dataN("importance_associatif", miss = F)
dataN("importance_associatif")
(importance_associatif_both <- barres(data=cbind(dataN("importance_associatif", miss = F), data_importance_CCC[,1]), rev = F,  miss = F, sort = F, labels = c('CCC', 'Population'), legend=0:10))
(importance_associatif_both <- barres(data=cbind(dataN("importance_associatif", miss = F), data_importance_CCC[,1]), rev = F, rev_color = T,  miss = F, sort = F, labels = c('CCC', 'Population'), legend=0:10))
save_plotly(importance_associatif_both)
variables_importance
(importance_environnement_both <- barres(data=cbind(dataN("importance_environnement", miss = F), data_importance_CCC[,2]), rev = F, rev_color = T,  miss = F, sort = F, labels = c('CCC', 'Population'), legend=0:10))
(importance_associatif_both <- barres(data=cbind(data_importance_CCC[,1], dataN("importance_associatif", miss = F)), rev = F, rev_color = T,  miss = F, sort = F, labels = c('CCC', 'Population'), legend=0:10))
save_plotly(importance_associatif_both)
(importance_environnement_both <- barres(data=cbind(data_importance_CCC[,2], dataN("importance_environnement", miss = F)), rev = F, rev_color = T,  miss = F, sort = F, labels = c('CCC', 'Population'), legend=0:10))
save_plotly(importance_environnement_both)
(importance_confort_both <- barres(data=cbind(data_importance_CCC[,3], dataN("importance_confort", miss = F)), rev = F, rev_color = T,  miss = F, sort = F, labels = c('CCC', 'Population'), legend=0:10))
save_plotly(importance_confort_both)
decrit(c$importance_confort_1e)
decrit(c$responsable_lutte_CC_1s)
save.image("/var/www/conv_citoyenne/CCC/code/.RData")
